import { Binding } from '../types';
import { ContextBindings } from '@azure/functions';
export type QueueBindingData = {
    id: string;
    queueTrigger: string | object;
    dequeueCount: number;
    expirationTime: string;
    insertionTime: string;
    nextVisibleTime: string;
    popReceipt: string;
};
declare interface DequeuedMessageItem {
    messageId: string;
    insertedOn: Date;
    expiresOn: Date;
    popReceipt: string;
    nextVisibleOn: Date;
    dequeueCount: number;
    messageText: string;
}
export declare class QueueBinding implements Binding {
    static createFromMessageText(queueTrigger: string | object): QueueBinding;
    static createFromDequeuedMessageItem(messageItem: DequeuedMessageItem): QueueBinding;
    private readonly data;
    constructor(bindingData: QueueBindingData);
    toContextBinding(): ContextBindings;
    toTrigger(): string | object;
    toBindingData(): ContextBindings;
}
export {};
//# sourceMappingURL=queue-binding.d.ts.map