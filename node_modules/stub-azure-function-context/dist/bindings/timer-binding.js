"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimerBinding = void 0;
class TimerBinding {
    constructor(timerData) {
        var _a, _b;
        this.now = timerData.now;
        this.data = {
            isPastDue: (_a = timerData.isPastDue) !== null && _a !== void 0 ? _a : false,
            schedule: {
                adjustForDST: (_b = timerData.adjustForDst) !== null && _b !== void 0 ? _b : true,
            },
            scheduleStatus: {
                last: new Date(timerData.now.getTime() - (timerData.interval * 1000)).toISOString(),
                next: new Date(timerData.now.getTime() + (timerData.interval * 1000)).toISOString(),
                lastUpdated: timerData.now.toISOString(),
            },
        };
    }
    toContextBinding() {
        return this.data;
    }
    toTrigger() {
        return this.data;
    }
    toBindingData() {
        const date = [
            this.now.getUTCDate().toString().padStart(2, '0'),
            '/',
            (this.now.getUTCMonth() + 1).toString().padStart(2, '0'),
            '/',
            this.now.getUTCFullYear(),
            ' ',
            this.now.getUTCHours().toString().padStart(2, '0'),
            ':',
            this.now.getUTCMinutes().toString().padStart(2, '0'),
            ':',
            this.now.getUTCSeconds().toString().padStart(2, '0'),
        ].join('');
        return { timerTrigger: date };
    }
}
exports.TimerBinding = TimerBinding;
//# sourceMappingURL=timer-binding.js.map