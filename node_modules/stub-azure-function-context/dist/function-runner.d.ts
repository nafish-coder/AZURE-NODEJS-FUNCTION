import { AzureFunction, BindingDefinition, Context } from '@azure/functions';
import { Binding } from './types';
export type AugmentContextCallback = (context: Context) => void;
export declare function functionRunner<T extends AzureFunction = AzureFunction>(azFunction: T, bindingDefinitions?: BindingDefinition[] | string, bindingData?: Record<string, Binding>, augmentContext?: AugmentContextCallback): Promise<Awaited<ReturnType<T>> extends void ? Context : Awaited<ReturnType<T>>>;
//# sourceMappingURL=function-runner.d.ts.map